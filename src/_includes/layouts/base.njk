<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <meta name="description" content="{{ description or title }}" />
  <title>{{ title }}</title>
  <link rel="canonical" href="https://kyrtinatreides.com{{ page.url }}" />
  <link rel="preload" href="/assets/feather-sprite.svg" as="image" type="image/svg+xml">
  
  <!-- Add Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap" rel="stylesheet">
  
  <style>
    :root {
      /* Base colors */
      --bg: #ffffff;
      --border: #e6e6e6;
      
      /* Text hierarchy */
      --text-primary: #333333;    /* Main content, headings */
      --text-secondary: #4b5563;  /* Sub-headings, important supporting text */
      --text-tertiary: #595959;   /* Dates, metadata, less important text */
    }

    .dark-mode {
      /* Base colors */
      --bg: #1a1a1a;
      --border: #2b2b2b;
      
      /* Text hierarchy */
      --text-primary: #e6e6e6;    /* Main content, headings */
      --text-secondary: #9ca3af;  /* Sub-headings, important supporting text */
      --text-tertiary: #787878;   /* Dates, metadata, less important text */
    }

    body {
      font-family: "Geist", system-ui, -apple-system, sans-serif;
      font-optical-sizing: auto;
      font-weight: 400;
      font-style: normal;
      margin: 1rem auto;
      line-height: 1.6;
      padding: 0 1rem; 
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      background-color: var(--bg);
      color: var(--text-primary);
    }

    main {
      flex: 1;
      margin-top: 2em;
    }

    /* Remove .papers-list from this rule */
    article p, 
    article ul, 
    article ol,
    .essay-list,
    article img {
      max-width: 65ch;
      margin-left: auto;
      margin-right: auto;
    }

    article img { 
      width: 100%;
      height: auto;
      display: block;
      margin: 2rem auto;
    }

    a {
      color: var(--text-primary);
      text-decoration: none;
    }

    nav {
      margin-bottom: 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-links {
      display: flex;
      gap: 1rem;
    }

    .theme-toggle {
      background: none;
      border: none;
      color: inherit;
      cursor: pointer;
      padding: 0;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .theme-toggle svg {
      width: 24px;
      height: 24px;
    }

    .theme-toggle .sun-icon,
    .theme-toggle .moon-icon {
      display: none;
    }

    .theme-toggle .sun-icon.active,
    .theme-toggle .moon-icon.active {
      display: block;
    }

    .theme-toggle .sun-icon use {
      fill: currentColor;
      stroke: currentColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
    }

    .theme-toggle .moon-icon use {
      fill: currentColor;
      stroke: currentColor;
      stroke-width: 2;
      stroke-linecap: round;
      stroke-linejoin: round;
    }

    footer {
      margin-top: 4rem;
      padding-top: 2rem;
      border-top: 1px solid var(--border);
      font-size: 0.9em;
      color: var(--text-secondary);
      text-align: center;
    }

    .dark-mode footer {
      color: var(--text-secondary);
    }

    @media (min-width: 650px) {
      body {
        max-width: 650px;
        margin: 2rem auto;
      }
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1em;
      line-height: 1;
    }

    .page-header h1 {
      margin: 0;
      line-height: 1;
      color: var(--text-primary);
    }

    /* Optional: Define specific weight classes if needed */
    .geist-regular {
      font-family: "Geist", sans-serif;
      font-optical-sizing: auto;
      font-weight: 400;
      font-style: normal;
    }

    .geist-medium {
      font-family: "Geist", sans-serif;
      font-optical-sizing: auto;
      font-weight: 500;
      font-style: normal;
    }

    .geist-bold {
      font-family: "Geist", sans-serif;
      font-optical-sizing: auto;
      font-weight: 700;
      font-style: normal;
    }

    .essay-title {
      padding-right: 2em;
      color: var(--text-primary);
    }

    .essays-sort-control {
      display: inline-flex;
      align-items: center;
      gap: 0.3em;
      cursor: pointer;
      white-space: nowrap;
      line-height: 1;
      font-size: 1em;
      color: var(--text-primary);
    }

    /* Dark mode specific overrides if needed */
    .dark-mode .essay-title,
    .dark-mode .page-header h1,
    .dark-mode .essays-sort-control {
      color: var(--text-primary);
    }

    .essay-date {
      color: var(--text-tertiary);
      font-size: 0.9em;
      white-space: nowrap;
    }

    .research-sort-control {
      /* ... other styles ... */
      color: var(--text-primary);
    }

    .paper-item .paper-title-row a {
      text-decoration: none;
      color: var(--text-primary);
      margin-right: 2em;
      flex: 1;
    }

    .paper-title-row time,
    .tag {
      color: var(--text-tertiary);
    }

    .tag {
      /* ... other styles ... */
      border: 0.5px solid var(--text-tertiary);
    }

    .dark-mode .papers-list .paper-item .paper-title-row a {
      color: var(--text-primary) !important;
    }

    .dark-mode .paper-title-row time {
      color: var(--text-tertiary) !important;
    }

    .dark-mode .tag {
      color: var(--text-tertiary) !important;
      border-color: var(--text-tertiary) !important;
    }

    /* Base text colors */
    article h1 {
      color: var(--text-primary);
    }

    article time {
      color: var(--text-secondary);
    }

    article {
      color: var(--text-primary);
    }

    /* Research-specific styles */
    .papers-list .paper-title-row a {
      color: var(--text-primary);
    }

    .papers-list time,
    .tag {
      color: var(--text-secondary);
    }

    .tag {
      border-color: var(--text-secondary);
    }

    /* Essay-specific styles */
    .essay-list .essay-title {
      color: var(--text-primary);
    }

    .essay-list time {
      color: var(--text-secondary);
    }

    /* Dark mode overrides if needed */
    .dark-mode article,
    .dark-mode article h1,
    .dark-mode .papers-list .paper-title-row a,
    .dark-mode .essay-list .essay-title {
      color: var(--text-primary);
    }

    .dark-mode article time,
    .dark-mode .papers-list time,
    .dark-mode .essay-list time,
    .dark-mode .tag {
      color: var(--text-secondary);
    }
  </style>
</head>
<body>
  {% include "assets/feather-sprite.svg" %}

  <nav>
    <div class="nav-links">
      <a href="/">Home</a>
      <a href="/essays/">Essays</a>
      <a href="/research/">Research</a>
    </div>
    <button class="theme-toggle" aria-label="Toggle dark mode">
      <svg class="sun-icon">
        <use href="#sun" />
      </svg>
      <svg class="moon-icon">
        <use href="#moon" />
      </svg>
    </button>
  </nav>

  <main>
    {% block content %}
    {{ content | safe }}
    {% endblock %}
  </main>

  <footer>
    <p>Â© {{ "" | currentYear }} Kyrtin Atreides</p>
  </footer>

  <script>
    const toggleBtn = document.querySelector('.theme-toggle');
    const sunIcon = toggleBtn.querySelector('.sun-icon');
    const moonIcon = toggleBtn.querySelector('.moon-icon');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');

    function setDarkMode(isDark) {
      document.documentElement.classList.toggle('dark-mode', isDark);
      sunIcon.classList.toggle('active', !isDark);
      moonIcon.classList.toggle('active', isDark);
    }

    // Initialize theme
    const storedTheme = localStorage.getItem('theme');
    setDarkMode(storedTheme === 'dark' || (!storedTheme && prefersDark.matches));

    // Listen for changes
    toggleBtn.addEventListener('click', () => {
      const isDark = document.documentElement.classList.contains('dark-mode');
      setDarkMode(!isDark);
      localStorage.setItem('theme', !isDark ? 'dark' : 'light');
    });
  </script>
</body>
</html>